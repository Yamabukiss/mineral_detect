#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

PACKAGE = "mineral_detect"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("morph_iterations",int_t, 0, "morph_iterations", 2,1, 10)
gen.add("min_area_thresh",double_t, 0, "min_area_thresh", 20000.0,100, 60000.0)
gen.add("lower_hsv_h",int_t, 0, "lower_hsv_h", 82,0, 180)
gen.add("lower_hsv_s",int_t, 0, "lower_hsv_s", 94,0, 255)
gen.add("lower_hsv_v",int_t, 0, "lower_hsv_v", 181,0, 255)
gen.add("upper_hsv_h",int_t, 0, "upper_hsv_h", 163,0, 180)
gen.add("upper_hsv_s",int_t, 0, "upper_hsv_s", 255,0, 255)
gen.add("upper_hsv_v",int_t, 0, "upper_hsv_v", 255,0, 255)
gen.add("roi_nonzero_percent",double_t, 0, "roi_nonzero_percent", 0.30,0.10,1.00)
gen.add("contours_ratio",double_t, 0, "contours_ratio_", 0.40,0.20,1.00)
gen.add("min_perimeter_area_ratio",double_t, 0, "min_perimeter_area_ratio", 0.01,0.0100,0.0500)
gen.add("max_perimeter_area_ratio",double_t, 0, "max_perimeter_area_ratio", 0.10,0.0500,0.1000)
gen.add("box_light_ratio",double_t, 0, "box_light_ratio", 1.85,0.0,3.0)
gen.add("light_rect_width_ratio",double_t, 0, "light_rect_width_ratio", 0.432,0.01,1.0)
gen.add("light_rect_height_ratio",double_t, 0, "light_rect_height_ratio", 0.1,0.01,1.0)
gen.add("dark_thresh",int_t, 0, "dark_thresh", 201,100,255)
gen.add("arrow_base_ratio",double_t, 0, "arrow_base_ratio", 0.284,0.1,0.5)
gen.add("arrow_branch_ratio_base",double_t, 0, "arrow_branch_ratio_base", 0.87,0.5,1.0)
gen.add("arrow_branch_ratio_base_x",double_t, 0, "arrow_branch_ratio_base_x", 0.0855,0.05,0.5)
gen.add("shape_bias",double_t, 0, "shape_bias", 65,40,100)



size_enum2 = gen.enum([ gen.const("MORPH_ERODE",      int_t, 0, "0"),
					   gen.const("MORPH_DILATE",     int_t, 1, "1"),
					   gen.const("MORPH_OPEN",     int_t, 2, "2"),
					   gen.const("MORPH_CLOSE",     int_t, 3, "3"),
					   gen.const("MORPH_GRADIENT",     int_t, 4, "4"),
					   gen.const("MORPH_TOPHAT",      int_t, 5, "5"),
					   gen.const("MORPH_BLACKHAT",      int_t, 6, "6"),
					   gen.const("MORPH_HITMISS",      int_t, 7, "7")],
					   "An enum to set morph type")

gen.add("morph_type", int_t, 0, "morph_type", 2, 0, 7, edit_method=size_enum2)

exit(gen.generate(PACKAGE, "mineral_detect_node", "dynamic"))