#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

PACKAGE = "mineral_detect"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("canny_thresh1",int_t, 0, "canny_thresh1", 255,0, 255)
gen.add("canny_thresh2",int_t, 0, "canny_thresh2", 255,0, 255)
gen.add("morph_iterations",int_t, 0, "morph_iterations", 4,1, 10)
gen.add("k_bias",double_t, 0, "k_bias", 0.2,0,0.5)
gen.add("length_bias",double_t, 0, "length_bias", 2000,0, 10000.0)
gen.add("min_area_thresh",double_t, 0, "min_area_thresh", 9000,100, 10000.0)
gen.add("max_area_thresh",double_t, 0, "max_area_thresh", 10000,50000, 100000.0)



size_enum2 = gen.enum([ gen.const("MORPH_ERODE",      int_t, 0, "0"),
					   gen.const("MORPH_DILATE",     int_t, 1, "1"),
					   gen.const("MORPH_OPEN",     int_t, 2, "2"),
					   gen.const("MORPH_CLOSE",     int_t, 3, "3"),
					   gen.const("MORPH_GRADIENT",     int_t, 4, "4"),
					   gen.const("MORPH_TOPHAT",      int_t, 5, "5"),
					   gen.const("MORPH_BLACKHAT",      int_t, 6, "6"),
					   gen.const("MORPH_HITMISS",      int_t, 7, "7")],
					   "An enum to set morph type")

gen.add("morph_type", int_t, 0, "morph_type", 1, 0, 7, edit_method=size_enum2)

exit(gen.generate(PACKAGE, "mineral_detect_node", "dynamic"))